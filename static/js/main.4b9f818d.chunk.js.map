{"version":3,"sources":["redux/auth/auth-operations.js","redux/contacts/contacts-action.js","components/Container/Container.module.css","redux/auth/auth-selectors.js","components/Container/Container.js","components/Navigation/Navigation.styled.jsx","components/Navigation/Navigation.js","components/AuthNav/AuthNav.styled.jsx","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.styled.jsx","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","getIsLoggedIn","isLoggedIn","getUserName","user","name","getIsFetchingCurrent","isFetchingCurrentUser","Container","children","className","s","container","StyledNavLink","styled","NavLink","StyledNav","nav","Navigation","useSelector","exact","to","activeClassName","AuthNav","UserMenu","dispatch","useDispatch","src","alt","width","type","onClick","StyledHeader","header","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","items","createReducer","payload","filter","id","combineReducers","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"4UAGAA,IAAMC,SAASC,QAAU,wCAGzB,IAAMC,EAAQ,SACNA,GACAH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAF1DA,EAAQ,WAKNH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAIzCC,EAAWC,YAAiB,gBAAD,uCAAkB,WAAMC,GAAN,iBAAAC,EAAA,+EAE3BV,IAAMW,KAAK,gBAAiBF,GAFD,uBAE1CG,EAF0C,EAE1CA,KACRT,EAAUS,EAAKT,OAHmC,kBAI3CS,GAJ2C,yFAAlB,uDAU3BC,EAAQL,YAAiB,aAAD,uCAAe,WAAMC,GAAN,iBAAAC,EAAA,+EAErBV,IAAMW,KAAK,eAAgBF,GAFN,uBAEpCG,EAFoC,EAEpCA,KACRT,EAAUS,EAAKT,OAH6B,kBAIrCS,GAJqC,yFAAf,uDAUxBE,EAASN,YAAiB,cAAD,uCAAgB,WAAMC,GAAN,iBAAAC,EAAA,+EAEvBV,IAAMW,KAAK,gBAAiBF,GAFL,uBAEtCG,EAFsC,EAEtCA,KACRT,IAH8C,kBAIvCS,GAJuC,yFAAhB,uDAUzBG,EAAmBP,YAC5B,eAD4C,uCAE5C,WAAOQ,EAAGC,GAAV,qBAAAP,EAAA,yDACUQ,EAAQD,EAASE,WAEA,QADjBC,EAAiBF,EAAMG,KAAKlB,OAFtC,yCAIec,EAASK,mBAJxB,cAMInB,EAAUiB,GANd,kBAQ+BpB,IAAMuB,IAAI,kBARzC,uBAQgBX,EARhB,EAQgBA,KARhB,kBASeA,GATf,4FAF4C,0D,gCC7ChD,+VAEaY,EAAsBC,YAAa,gCACnCC,EAAsBD,YAAa,gCACnCE,EAAoBF,YAAa,8BAEjCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAAa,iCACpCO,EAAuBP,YAAa,iCACpCQ,EAAqBR,YAAa,+BAElCS,EAAeT,YAAa,qB,mBCbzCU,EAAOC,QAAU,CAAC,UAAY,+B,+JCDjBC,EAAgB,SAAAnB,GAAK,OAAIA,EAAMG,KAAKiB,YAEpCC,EAAc,SAAArB,GAAK,OAAIA,EAAMG,KAAKmB,KAAKC,MAEvCC,EAAuB,SAAAxB,GAAK,OAAIA,EAAMG,KAAKsB,uB,wBCCzCC,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCArDI,EAAgBC,YAAOC,IAAPD,CAAH,wNAYbE,EAAYF,IAAOG,IAAV,sJCYPC,EAtBI,WACf,IAAMhB,EAAaiB,YAAYlB,GAC/B,OACA,eAACe,EAAD,WACI,cAACH,EAAD,CACIO,OAAK,EACLC,GAAG,IACHC,gBAAgB,aAHpB,kBAOCpB,GACG,cAACW,EAAD,CACIQ,GAAG,YACHC,gBAAgB,aAFpB,0BCdCT,EAAgBC,YAAOC,IAAPD,CAAH,uNAYbE,EAAYF,IAAOG,IAAV,qGCGPM,EAfC,kBACZ,eAAC,EAAD,WACI,cAAC,EAAD,CACIH,OAAK,EACLC,GAAG,YAEHC,gBAAgB,aAJpB,sBAKA,cAAC,EAAD,CACIF,OAAK,EACLC,GAAG,SAEHC,gBAAgB,aAJpB,uBCLO,SAASE,IACpB,IAAMC,EAAWC,cACXrB,EAAOc,YAAYhB,GAGzB,OACI,gCACI,qBAAKwB,IAAI,GAAGC,IAAI,GAAGC,MAAM,OACzB,6CAAgBxB,KAChB,wBAAQyB,KAAK,SAASC,QAAU,kBAAKN,EAAS/C,gBAA9C,yBCZL,IAAMsD,EAAelB,IAAOmB,OAAV,mUCMV,SAASC,IACpB,IAAMhC,EAAaiB,YAAYlB,GAE/B,OACI,eAAC+B,EAAD,WACI,cAAC,EAAD,IACC9B,EAAa,cAACsB,EAAD,IAAe,cAAC,EAAD,O,gDCV1B,SAASW,EAAT,GAGO,IAFlB1B,EAEiB,EAFjBA,SAEiB,IADjB2B,kBACiB,MADL,IACK,EAAdC,EAAc,iBACXnC,EAAaiB,YAAYlB,GAC/B,OACI,cAAC,IAAD,2BAAWoC,GAAX,aACKnC,EAAaO,EAAW,cAAC,IAAD,CAAUY,GAAIe,O,6CCPpC,SAASE,EAAT,GAIO,IAHlB7B,EAGiB,EAHjBA,SAGiB,IAFjB2B,kBAEiB,MAFL,IAEK,MADjBG,kBACiB,SAAdF,EAAc,iBAEXG,EADarB,YAAYlB,IACMsC,EACrC,OACI,cAAC,IAAD,2BAAWF,GAAX,aACKG,EAAiB,cAAC,IAAD,CAAUnB,GAAIe,IAAgB3B,KCH5D,IAAMgC,EAAWC,gBAAK,kBAAM,gCACtBC,EAAeD,gBAAK,kBAAM,gCAC1BE,EAAYF,gBAAK,kBAAM,gCACvBG,EAAeH,gBAAK,kBAAM,gCAEjB,SAASI,IACtB,IAAMrB,EAAWC,cACXnB,EAAwBY,YAAYb,GAM1C,OAJAyC,qBAAU,WACRtB,EAAS9C,iBACR,CAAC8C,KAGDlB,GACE,eAAC,EAAD,WACC,cAAC2B,EAAD,IACE,cAAC,WAAD,CAAUc,SAAU,6CAApB,SACE,eAAC,IAAD,WAEE,cAACV,EAAD,CAAalB,OAAK,EAAC6B,KAAK,IAAxB,SACE,cAACR,EAAD,MAGF,cAACH,EAAD,CAAalB,OAAK,EAAC6B,KAAK,YAAYV,YAAU,EAA9C,SACE,cAACI,EAAD,MAGF,cAACL,EAAD,CAAalB,OAAK,EAAC6B,KAAK,SAASb,WAAW,YAAYG,YAAU,EAAlE,SACE,cAACK,EAAD,MAGF,cAACT,EAAD,CAAcc,KAAK,YAAYb,WAAW,SAA1C,SACE,cAACS,EAAD,c,2FC/BVK,GAAQC,YAAc,IAAD,oBACtB7D,MAAsB,SAACV,EAAD,YAAMwE,WADN,eAGtB3D,MAAoB,SAACX,EAAD,YAASsE,SAAT,mBAAmCtE,OAHjC,eAItBc,MAAuB,SAACd,EAAD,OAASsE,EAAT,EAASA,QAAT,OACpBtE,EAAMuE,QAAO,qBAAEC,KAAeF,QALX,IAQrBC,GAASF,YAAc,GAAD,gBACxBrD,MAAc,SAAClB,EAAD,YAAKwE,YAGRG,gBAAgB,CAC3BL,SACAG,YCkBWG,GAlCGC,YAAY,CAC1BpD,KAAM,OACNqD,aATiB,CACjBtD,KAAM,CAAEC,KAAM,KAAMsD,MAAO,MAC3B5F,MAAO,KACPmC,YAAY,EACZK,uBAAuB,GAOvBqD,eAAa,oBACRzF,IAAS0F,WADD,SACY/E,EAAOgF,GACxBhF,EAAMsB,KAAO0D,EAAOV,QAAQhD,KAC5BtB,EAAMf,MAAQ+F,EAAOV,QAAQrF,MAC7Be,EAAMoB,YAAa,KAJd,eAMRzB,IAAMoF,WANE,SAMS/E,EAAOgF,GACrBhF,EAAMsB,KAAO0D,EAAOV,QAAQhD,KAC5BtB,EAAMf,MAAQ+F,EAAOV,QAAQrF,MAC7Be,EAAMoB,YAAa,KATd,eAWRxB,IAAOmF,WAXC,SAWU/E,EAAOgF,GACtBhF,EAAMsB,KAAO,CAAEC,KAAM,KAAMsD,MAAO,MAClC7E,EAAMf,MAAQ,KACde,EAAMoB,YAAa,KAdd,eAgBRvB,IAAiBoF,SAhBT,SAgBkBjF,GACvBA,EAAMyB,uBAAwB,KAjBzB,eAmBR5B,IAAiBkF,WAnBT,SAmBoB/E,EAAOgF,GAChChF,EAAMsB,KAAO0D,EAAOV,QACpBtE,EAAMoB,YAAa,EACnBpB,EAAMyB,uBAAwB,KAtBzB,eAwBR5B,IAAiBqF,UAxBT,SAwBmBlF,GACxBA,EAAMyB,uBAAwB,KAzBzB,KA8BjB,QCzBM0D,GAAU,sBAAOC,YAAqB,CACxCC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAFlD,CAKZC,MAQEC,GAAoB,CACtBC,IAAK,OACLC,aACAC,UAAW,CAAC,UASHC,GAAQC,YAAe,CAChCC,QAAS,CACLjG,KAAMkG,YAAeP,GAAmBQ,IACxCC,SAAUC,IAEdrB,cACAsB,UAAUC,IAIDC,GAAYC,YAAaV,IC5CtCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAac,QAAS,KAAML,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAAC3C,EAAD,YAKRiD,SAASC,cAAc,Y","file":"static/js/main.4b9f818d.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\n//ставим общий заголовок в запросах axios\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n}\r\n\r\nexport const register = createAsyncThunk('auth/register', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n});\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/login', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n});\r\n\r\nexport const logOut = createAsyncThunk('auth/logout', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/logout', credentials);\r\n        token.unset();\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n    'auth/refresh',\r\n    async (_, thunkAPI) => {\r\n        const state = thunkAPI.getState();\r\n        const persistedToken = state.auth.token;\r\n        if (persistedToken === null) {\r\n            return thunkAPI.rejectWithValue();\r\n        }\r\n        token.set(persistedToken);\r\n        try {\r\n            const { data } = await axios.get('/users/current');\r\n            return data;\r\n        } catch (error) {\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n)","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('app/changeFilter');\r\n\r\n    \r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__14MLr\"};","export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nexport const getUserName = state => state.auth.user.name;\r\n\r\nexport const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nexport const authSelectors = {\r\n    getIsLoggedIn,\r\n    getUserName,\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\r\n\r\nexport default Container;","import styled from '@emotion/styled'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n    margin-right: 20px;\r\n    color: rgba(39, 164, 236);\r\n\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    line-height: 1.475;\r\n\r\n    &.activeLink {\r\n    color: rgb(4, 109, 165);\r\n  }\r\n  `\r\nexport const StyledNav = styled.nav`\r\ncolor: rgba(39, 164, 236,0);\r\n    /* display: flex;\r\n    justify-content:right;\r\n    border-bottom: solid 1px pink; */\r\n  `","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { StyledNavLink, StyledNav } from './Navigation.styled.jsx';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors.js';\r\n\r\nconst Navigation = () => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn)\r\n    return(\r\n    <StyledNav>\r\n        <StyledNavLink\r\n            exact\r\n            to=\"/\"\r\n            activeClassName=\"activeLink\">\r\n            Home\r\n        </StyledNavLink>\r\n            \r\n        {isLoggedIn && (\r\n            <StyledNavLink\r\n                to=\"/contacts\"\r\n                activeClassName=\"activeLink\">\r\n                Contacts\r\n            </StyledNavLink>\r\n        )}    \r\n    </StyledNav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import styled from '@emotion/styled'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n    margin-right: 20px;\r\n    color: rgb(39, 164, 236);\r\n\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    line-height: 1.475;\r\n\r\n    &.activeLink {\r\n    color: rgb(4, 109, 165);\r\n  }\r\n  `\r\nexport const StyledNav = styled.nav`\r\n  color: rgb(39, 164, 236);\r\n    /* border-bottom: solid 1px pink; */\r\n  `","import React from 'react';\r\nimport { StyledNavLink, StyledNav } from './AuthNav.styled.jsx'\r\n\r\nconst AuthNav = () => (\r\n    <StyledNav>\r\n        <StyledNavLink\r\n            exact\r\n            to=\"/register\"\r\n            \r\n            activeClassName=\"activeLink\">Register</StyledNavLink>\r\n        <StyledNavLink\r\n            exact\r\n            to=\"/login\"\r\n           \r\n            activeClassName=\"activeLink\">Login</StyledNavLink>\r\n    </StyledNav>\r\n)\r\n\r\nexport default AuthNav;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport  {getUserName} from '../../redux/auth/auth-selectors';\r\n// import defaultAvatar from \r\n\r\nexport default function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(getUserName);\r\n    // const avatar = defaultAvatar;\r\n\r\n    return (\r\n        <div>\r\n            <img src=\"\" alt=\"\" width=\"32\" />\r\n            <span>Welcome, {name}</span>\r\n            <button type=\"button\" onClick ={() =>dispatch(logOut())}> Log out</button>\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n","import styled from '@emotion/styled'\r\n\r\nexport const StyledHeader = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-right: 20px;\r\n    color: rgb(39, 164, 236);\r\n\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    line-height: 1.475;\r\n\r\n    border-bottom: solid 1px rgb(39, 164, 236);\r\n\r\n    &.activeLink {\r\n    color: rgb(4, 109, 165);\r\n  }\r\n  `","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\nimport { StyledHeader } from './AppBar.styled.jsx';\r\n\r\nexport default function AppBar() {\r\n    const isLoggedIn = useSelector(getIsLoggedIn)\r\n\r\n    return (\r\n        <StyledHeader>\r\n            <Navigation />\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </StyledHeader>\r\n    );\r\n}\r\n          \r\n\r\n\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors'\r\n\r\nexport default function PrivateRoute({\r\n    children,\r\n    redirectTo ='/',\r\n    ...routeProps }) {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    );\r\n}","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors'\r\n\r\nexport default function PublicRoute({\r\n    children,\r\n    redirectTo ='/',\r\n    restricted =false,\r\n    ...routeProps }) {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ? <Redirect to={redirectTo} />: children}\r\n        </Route>\r\n    );\r\n}","import React, { useEffect, Suspense, lazy } from 'react';\nimport {useSelector, useDispatch} from 'react-redux' \nimport { Switch } from 'react-router-dom';\nimport { fetchCurrentUser } from './redux/auth/auth-operations';\nimport { getIsFetchingCurrent } from './redux/auth/auth-selectors';\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView' /*webpackChunkName: \"home-view\" */));\nconst RegisterView = lazy(() => import('./views/RegisterView' /*webpackChunkName: \"register-view\" */));\nconst LoginView = lazy(() => import('./views/LoginView' /*webpackChunkName: \"login-view\" */));\nconst ContactsView = lazy(() => import('./views/ContactsView' /*webpackChunkName: \"contacts-view\" */));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser())\n  }, [dispatch])\n  \n  return (\n    !isFetchingCurrentUser && (\n       <Container>\n        <AppBar />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n            \n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n\n              <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n                <LoginView />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n\n            </Switch>\n          </Suspense>\n      </Container>\n    )\n  );\n}\n\n\n\n","//with Redux Toolkit\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    addContactSuccess,\r\n    deleteContactSuccess,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    changeFilter\r\n} from './contacts-action'\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    // [fetchContactError]:(_, {payload}) => [],\r\n    [addContactSuccess]: (state, {payload}) => [payload, ...state],\r\n    [deleteContactSuccess]: (state, {payload}) =>\r\n        state.filter(({id}) => id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n   [changeFilter]:(_, {payload}) => payload, \r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n});\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {register, logIn, logOut, fetchCurrentUser} from './auth-operations';\r\n\r\nconst initialState = {\r\n    user: { name: null, email: null },\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isFetchingCurrentUser: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    //mini-reducer in slice \r\n    extraReducers: {\r\n        [register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logOut.fulfilled](state, action) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n        [fetchCurrentUser.pending](state) {\r\n            state.isFetchingCurrentUser = true;\r\n        },\r\n        [fetchCurrentUser.fulfilled](state, action) {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n        [fetchCurrentUser.rejected](state) {\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;","//with Redux Toolkit\r\nimport { configureStore, getDefaultMiddleware, combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-slice';\r\n\r\n//for watching prevState, action, nextState in console\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}),\r\n    logger]\r\n\r\n//localStorage\r\n// const persistConfig = {\r\n//     key: 'contacts',\r\n//     storage\r\n// }\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n}\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer,\r\n// })\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\n//обертка над store, которая реализует обновление LocalStorage\r\nexport const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}