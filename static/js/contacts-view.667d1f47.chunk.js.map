{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactListItem/ContactListItem.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","views/ContactsView.js"],"names":["module","exports","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_typeof","obj","Symbol","iterator","constructor","prototype","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","arguments","apply","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normilizedFilter","toLowerCase","contact","name","includes","ContactForm","subClass","superClass","create","value","protoProps","staticProps","number","id","handleChange","currentTarget","setState","handleSubmit","preventDefault","filterName","find","alert","reset","onAddContact","onSubmit","className","s","form","label","title","input","type","onChange","pattern","required","button","Component","connect","dispatch","a","addContactRequest","post","data","addContactSuccess","addContactError","addContact","actions","onDeleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","item","onClick","list","map","ContactsView","useDispatch","useEffect","fetchContactRequest","get","fetchContactSuccess","fetchContactError","message"],"mappings":"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","file":"static/js/contacts-view.667d1f47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__KHT-h\",\"label\":\"ContactForm_label__2Zf7c\",\"title\":\"ContactForm_title__202g_\",\"input\":\"ContactForm_input__2inML\",\"button\":\"ContactForm_button__2cacf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3rlwK\",\"title\":\"Filter_title__3Odo1\",\"input\":\"Filter_input__3GQSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2lqr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3HmYo\",\"contact\":\"ContactListItem_contact__3Q-wy\",\"name\":\"ContactListItem_name__3jWGL\",\"number\":\"ContactListItem_number__3sN6-\",\"button\":\"ContactListItem_button__3pGjM\"};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import axios from 'axios';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError\r\n} from './contacts-action'\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactRequest());\r\n\r\n    //асинхронный код\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error.message))\r\n    }\r\n}\r\n\r\nexport const addContact = ({ name, number }) => async dispatch => {\r\n    const contact = {\r\n        name,\r\n        number\r\n    }\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n        const { data } = await axios.post('/contacts', contact);\r\n        dispatch(addContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(addContactError(error))\r\n    }\r\n}\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    try {\r\n        const response = await axios.delete(`/contacts/${contactId}`);\r\n        dispatch(deleteContactSuccess(contactId))\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error))\r\n    }\r\n}\r\n\r\n","import {createSelector} from '@reduxjs/toolkit'\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\n//selector's memoization\r\nexport const getVisibleContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    //тело функции будет выполнено только если изменится contacts или filter\r\n    (contacts, filter) => {\r\n        const normilizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normilizedFilter));\r\n    }\r\n)   \r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        id: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        const filterName = this.state.name;\r\n    \r\n        if (this.props.contacts.find(contact => contact.name.toLowerCase() === filterName.toLowerCase())) {\r\n            alert(`${filterName} is already in contacts`);\r\n            this.reset();\r\n            return;\r\n        }\r\n        \r\n        this.props.onAddContact(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        \r\n        return (\r\n            \r\n            <form onSubmit={this.handleSubmit} className={s.form}>\r\n                    <label className={s.label}>\r\n                        <span className={s.title}>Name</span>\r\n                        <input\r\n                            className={s.input}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <label className={s.label}>\r\n                        <span className={s.title}>Number</span>\r\n                        <input\r\n                            className={s.input}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            value={number}\r\n                            onChange={this.handleChange}\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <button className={s.button} type=\"submit\">Add contact</button>\r\n                </form>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: getContacts(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   \r\n  return {\r\n    onAddContact: ({name, number}) => dispatch(addContact({name, number})),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n};","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contacts/contacts-action';\r\nimport {getFilter} from '../../redux/contacts/contacts-selectors';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={s.label}>\r\n        <span className={s.title}>Find contacts by name</span>\r\n        <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n)\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      value: getFilter(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChange: e => dispatch(actions.changeFilter(e.target.value)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange:PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {deleteContact} from '../../redux/contacts/contacts-operations'\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({contacts, onDeleteContact }) => (\r\n    <div className={s.item}>\r\n        <p className={s.contact}>\r\n            <span className={s.name}>{contacts.name}:\r\n            </span>\r\n            <span className={s.number}>{contacts.number}\r\n            </span>\r\n        </p>\r\n        <button className={s.button} onClick={()=> onDeleteContact(contacts.id)}>Delete</button>\r\n    </div> \r\n)\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: (contactId) => dispatch(deleteContact(contactId)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListItem);\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }),\r\n    onDeleteContact:PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n//import {fetchContacts} from '../../redux/contacts/contacts-operations'\r\nimport s from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\n\r\nconst ContactList = ({contacts}) => (\r\n    <ul className={s.list}>\r\n        {contacts.map((contacts)=> (\r\n            <li key={contacts.id}  >\r\n                <ContactListItem contacts={contacts}/>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: getVisibleContacts(state)\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, null)(ContactList);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\n ","import React, {useEffect} from 'react';\r\nimport { useDispatch} from 'react-redux';\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\nimport {fetchContacts} from '../redux/contacts/contacts-operations'\r\n//import s from './App.module.css';\r\n\r\nexport default function ContactsView() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(fetchContacts()), [dispatch])\r\n    return (\r\n        <div>\r\n          <h1 className=''>Phonebook</h1>\r\n          <ContactForm />\r\n          <h2 className=''>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>)\r\n}\r\n\r\n"],"sourceRoot":""}