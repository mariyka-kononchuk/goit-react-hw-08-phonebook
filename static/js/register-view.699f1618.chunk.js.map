{"version":3,"sources":["views/RegisterView.js"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","component","sx","m","noValidate","onSubmit","e","preventDefault","register","autoComplete","variant","type","value","onChange","event","target"],"mappings":"sRASe,SAASA,IACpB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAsBA,OACI,8BACI,eAAC,IAAD,CACIC,UAAU,OACVC,GAAI,CACA,kBAAmB,CAAEC,EAAG,IAE5BC,YAAU,EACVC,SAhBS,SAAAC,GACjBA,EAAEC,iBACFf,EAASgB,YAAS,CAAEb,OAAME,QAAOE,cACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAYJS,aAAa,MAPjB,UAQI,eAAC,IAAD,CAAaC,QAAQ,WAArB,UACI,cAAC,IAAD,mBACA,cAAC,IAAD,CACIC,KAAK,OACLC,MAAOjB,EACPkB,SAnCK,SAACC,GAC1BlB,EAAQkB,EAAMC,OAAOH,aAoCL,eAAC,IAAD,CAAaF,QAAQ,WAArB,UACA,cAAC,IAAD,oBACA,cAAC,IAAD,CACIC,KAAK,QACLC,MAAOf,EACPgB,SAtCM,SAACC,GAC3BhB,EAASgB,EAAMC,OAAOH,aAuCV,eAAC,IAAD,CAAaF,QAAQ,WAArB,UACI,cAAC,IAAD,uBACA,cAAC,IAAD,CACIC,KAAK,WACLC,MAAOb,EACPc,SAzCS,SAACC,GAC9Bd,EAAYc,EAAMC,OAAOH,aA0CT,cAAC,IAAD,CAAQF,QAAQ,YAAYC,KAAK,SAAjC","file":"static/js/register-view.699f1618.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from '../redux/auth/auth-operations';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n\r\nexport default function RegisterView() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleChangeName = (event) => {\r\n    setName(event.target.value);\r\n    };\r\n\r\n    const handleChangeEmail = (event) => {\r\n    setEmail(event.target.value);\r\n    };\r\n    \r\n    const handleChangePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n  \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(register({ name, email, password }));\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& > :not(style)': { m: 1 },\r\n                }}\r\n                noValidate\r\n                onSubmit={handleSubmit}\r\n                autoComplete=\"off\">\r\n                <FormControl variant=\"standard\">\r\n                    <InputLabel>Name</InputLabel>\r\n                    <Input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={handleChangeName} />\r\n                </FormControl>\r\n                    <FormControl variant=\"standard\">\r\n                    <InputLabel>Email</InputLabel>\r\n                    <Input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={handleChangeEmail} />\r\n                </FormControl>\r\n                <FormControl variant=\"standard\">\r\n                    <InputLabel>Password</InputLabel>\r\n                    <Input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={handleChangePassword} />\r\n                </FormControl>\r\n                    <Button variant=\"contained\" type=\"submit\">Register</Button>\r\n            </Box>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}