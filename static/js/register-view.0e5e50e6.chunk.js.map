{"version":3,"sources":["views/RegisterView.js"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","register","autoComplete","Item","label","rules","required","message","type","onChange"],"mappings":"6QAMe,SAASA,IACpB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACpC,OAAQR,GACJ,IAAK,OACD,OAAOC,EAAQO,GACnB,IAAK,QACD,OAAOL,EAASK,GACpB,IAAK,WACD,OAAOH,EAAYG,GACvB,QACI,SAWZ,OACI,8BACI,eAAC,IAAD,CAAMC,SAVO,SAAAC,GACjBA,EAAEC,iBACFd,EAASe,YAAS,CAAEZ,OAAME,QAAOE,cACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAKsBQ,aAAa,MAAMb,KAAK,QAAtD,UACI,cAAC,IAAKc,KAAN,CACIC,MAAM,OACNf,KAAK,OACLgB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,2BANrB,SAUQ,cAAC,IAAD,CACIC,KAAK,OACLnB,KAAK,OACLQ,MAAOR,EACPoB,SAAUd,MAMtB,cAAC,IAAKQ,KAAN,CACIC,MAAM,QACNf,KAAK,QACLgB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,4BANrB,SAUQ,cAAC,IAAD,CACIC,KAAK,QACLnB,KAAK,QACLQ,MAAON,EACPkB,SAAUd,MAMtB,cAAC,IAAKQ,KAAN,CACIC,MAAM,WACNf,KAAK,WACLgB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,+BANrB,SASQ,cAAC,IAAD,CACIC,KAAK,WACLnB,KAAK,WACLQ,MAAOJ,EACPgB,SAAUd,MAGlB,cAAC,IAAD,CAAQa,KAAK,UAAb","file":"static/js/register-view.0e5e50e6.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from '../redux/auth/auth-operations';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nexport default function RegisterView() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        switch (name) {\r\n            case 'name':\r\n                return setName(value);\r\n            case 'email':\r\n                return setEmail(value);\r\n            case 'password':\r\n                return setPassword(value);\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(register({ name, email, password }));\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit} autoComplete=\"off\" name=\"basic\">\r\n                <Form.Item\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your name',\r\n                        },\r\n                    ]}\r\n                > \r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={handleChange}\r\n                            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            // required\r\n                        />\r\n                    </Form.Item>\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email',\r\n                        },\r\n                    ]}>\r\n                        \r\n                        <Input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={handleChange}\r\n                            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            // required\r\n                        />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password',\r\n                        },\r\n                    ]}>\r\n                        <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Item>\r\n                    <Button type=\"primary\">Register</Button>\r\n                </Form>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}