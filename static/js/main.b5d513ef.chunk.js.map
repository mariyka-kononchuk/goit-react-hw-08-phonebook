{"version":3,"sources":["redux/auth/auth-selectors.js","components/Container/Container.js","components/Navigation/Navigation.styled.jsx","components/Navigation/Navigation.js","components/AuthNav/AuthNav.styled.jsx","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.styled.jsx","components/UserMenu/UserMenu.js","components/AppBar/AppBar.styled.jsx","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/contacts/contacts-action.js","components/Container/Container.module.css"],"names":["getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getIsFetchingCurrent","isFetchingCurrentUser","Container","children","className","s","container","StyledNavLink","styled","NavLink","StyledNav","nav","Navigation","useSelector","exact","to","activeClassName","AuthNav","Name","div","span","button","UserMenu","dispatch","useDispatch","src","alt","width","type","onClick","logOut","StyledHeader","header","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fetchCurrentUser","fallback","path","items","createReducer","fetchContactSuccess","_","payload","addContactSuccess","deleteContactSuccess","filter","id","changeFilter","combineReducers","authSlice","createSlice","initialState","email","token","extraReducers","register","fulfilled","action","logIn","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","post","data","thunkAPI","getState","persistedToken","rejectWithValue","get","fetchContactRequest","createAction","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","module","exports"],"mappings":"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","file":"static/js/main.b5d513ef.chunk.js","sourcesContent":["export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nexport const getUserName = state => state.auth.user.name;\r\n\r\nexport const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nexport const authSelectors = {\r\n    getIsLoggedIn,\r\n    getUserName,\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\r\n\r\nexport default Container;","import styled from '@emotion/styled'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n    margin-right: 20px;\r\n    color: rgba(39, 164, 236);\r\n\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    line-height: 1.475;\r\n\r\n    &.activeLink {\r\n    color: rgb(4, 109, 165);\r\n  }\r\n  `\r\nexport const StyledNav = styled.nav`\r\ncolor: rgba(39, 164, 236,0);\r\n    /* display: flex;\r\n    justify-content:right;\r\n    border-bottom: solid 1px pink; */\r\n  `","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { StyledNavLink, StyledNav } from './Navigation.styled.jsx';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors.js';\r\n\r\nconst Navigation = () => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn)\r\n    return(\r\n    <StyledNav>\r\n        <StyledNavLink\r\n            exact\r\n            to=\"/\"\r\n            activeClassName=\"activeLink\">\r\n            Home\r\n        </StyledNavLink>\r\n            \r\n        {isLoggedIn && (\r\n            <StyledNavLink\r\n                to=\"/contacts\"\r\n                activeClassName=\"activeLink\">\r\n                Contacts\r\n            </StyledNavLink>\r\n        )}    \r\n    </StyledNav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import styled from '@emotion/styled'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n    margin-right: 20px;\r\n    color: rgb(39, 164, 236);\r\n\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    line-height: 1.475;\r\n\r\n    &.activeLink {\r\n    color: rgb(4, 109, 165);\r\n  }\r\n  `\r\nexport const StyledNav = styled.nav`\r\n  color: rgb(39, 164, 236);\r\n    /* border-bottom: solid 1px pink; */\r\n  `","import React from 'react';\r\nimport { StyledNavLink, StyledNav } from './AuthNav.styled.jsx'\r\n\r\nconst AuthNav = () => (\r\n    <StyledNav>\r\n        <StyledNavLink\r\n            exact\r\n            to=\"/register\"\r\n            \r\n            activeClassName=\"activeLink\">Register</StyledNavLink>\r\n        <StyledNavLink\r\n            exact\r\n            to=\"/login\"\r\n           \r\n            activeClassName=\"activeLink\">Login</StyledNavLink>\r\n    </StyledNav>\r\n)\r\n\r\nexport default AuthNav;","import styled from '@emotion/styled'\r\n\r\nexport const UserMenu = styled.div`\r\n    display:flex;\r\n  `\r\nexport const Name = styled.span`\r\n    margin-right: 20px;\r\n    color: grey;\r\n\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    line-height: 1.375;\r\n  `\r\n export const LogOutButton = styled.button`\r\n    padding: 4px 8px;\r\n    border-radius: 2px;\r\n    background-color: rgb(4, 109, 165);\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: block;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    /* margin-left: 0px; */\r\n    /* margin-right: auto; */\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    min-width: 100px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n      &:hover, focus {\r\n        background-color: #a5a1a4;\r\n      }\r\n`","import { useDispatch, useSelector } from 'react-redux';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { Name, LogOutButton } from './UserMenu.styled.jsx';\r\nimport { Button } from 'antd';\r\n// import defaultAvatar from \r\n\r\nexport default function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(getUserName);\r\n    // const avatar = defaultAvatar;\r\n\r\n    return (\r\n        <UserMenu>\r\n            <img src=\"\" alt=\"\" width=\"32\" />\r\n            <Name>Welcome, {name}</Name>\r\n            <Button type=\"primary\" onClick ={() =>dispatch(logOut())}>Log out</Button>\r\n        </UserMenu>\r\n    )\r\n}\r\n    \r\n\r\n","import styled from '@emotion/styled'\r\n\r\nexport const StyledHeader = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n    color: rgb(39, 164, 236);\r\n\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    line-height: 1.475;\r\n\r\n    border-bottom: solid 1px rgb(39, 164, 236);\r\n\r\n    &.activeLink {\r\n    color: rgb(4, 109, 165);\r\n  }\r\n  `","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\nimport { StyledHeader } from './AppBar.styled.jsx';\r\n\r\nexport default function AppBar() {\r\n    const isLoggedIn = useSelector(getIsLoggedIn)\r\n\r\n    return (\r\n        <StyledHeader>\r\n            <Navigation />\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </StyledHeader>\r\n    );\r\n}\r\n          \r\n\r\n\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors'\r\n\r\nexport default function PrivateRoute({\r\n    children,\r\n    redirectTo ='/',\r\n    ...routeProps }) {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    );\r\n}","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors'\r\n\r\nexport default function PublicRoute({\r\n    children,\r\n    redirectTo ='/',\r\n    restricted =false,\r\n    ...routeProps }) {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ? <Redirect to={redirectTo} />: children}\r\n        </Route>\r\n    );\r\n}","import React, { useEffect, Suspense, lazy } from 'react';\nimport {useSelector, useDispatch} from 'react-redux' \nimport { Switch } from 'react-router-dom';\nimport { fetchCurrentUser } from './redux/auth/auth-operations';\nimport { getIsFetchingCurrent } from './redux/auth/auth-selectors';\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView' /*webpackChunkName: \"home-view\" */));\nconst RegisterView = lazy(() => import('./views/RegisterView' /*webpackChunkName: \"register-view\" */));\nconst LoginView = lazy(() => import('./views/LoginView' /*webpackChunkName: \"login-view\" */));\nconst ContactsView = lazy(() => import('./views/ContactsView' /*webpackChunkName: \"contacts-view\" */));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser())\n  }, [dispatch])\n  \n  return (\n    !isFetchingCurrentUser && (\n       <Container>\n        <AppBar />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n            \n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n\n              <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n                <LoginView />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n\n            </Switch>\n          </Suspense>\n      </Container>\n    )\n  );\n}\n\n\n\n","//with Redux Toolkit\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    addContactSuccess,\r\n    deleteContactSuccess,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    changeFilter\r\n} from './contacts-action'\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    // [fetchContactError]:(_, {payload}) => [],\r\n    [addContactSuccess]: (state, {payload}) => [payload, ...state],\r\n    [deleteContactSuccess]: (state, {payload}) =>\r\n        state.filter(({id}) => id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n   [changeFilter]:(_, {payload}) => payload, \r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n});\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {register, logIn, logOut, fetchCurrentUser} from './auth-operations';\r\n\r\nconst initialState = {\r\n    user: { name: null, email: null },\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isFetchingCurrentUser: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    //mini-reducer in slice \r\n    extraReducers: {\r\n        [register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logOut.fulfilled](state, action) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n        [fetchCurrentUser.pending](state) {\r\n            state.isFetchingCurrentUser = true;\r\n        },\r\n        [fetchCurrentUser.fulfilled](state, action) {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n        [fetchCurrentUser.rejected](state) {\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;","//with Redux Toolkit\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-slice';\r\n\r\n//for watching prevState, action, nextState in console\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}),\r\n    logger]\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n}\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\n//обертка над store, которая реализует обновление LocalStorage\r\nexport const persistor = persistStore(store);\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\n//ставим общий заголовок в запросах axios\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n}\r\n\r\nexport const register = createAsyncThunk('auth/register', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n});\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/login', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n});\r\n\r\nexport const logOut = createAsyncThunk('auth/logout', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/logout', credentials);\r\n        token.unset();\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n    'auth/refresh',\r\n    async (_, thunkAPI) => {\r\n        const state = thunkAPI.getState();\r\n        const persistedToken = state.auth.token;\r\n        if (persistedToken === null) {\r\n            return thunkAPI.rejectWithValue();\r\n        }\r\n        token.set(persistedToken);\r\n        try {\r\n            const { data } = await axios.get('/users/current');\r\n            return data;\r\n        } catch (error) {\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n)","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('app/changeFilter');\r\n\r\n    \r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__14MLr\"};"],"sourceRoot":""}